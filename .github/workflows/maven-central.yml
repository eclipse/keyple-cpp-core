name: Build, test and publish Maven Central

on:
  push:
    branches: [main, 'release-*']
  pull_request:
    branches: [main, 'release-*']
  workflow_dispatch:

permissions:
  contents: write

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Ensure scripts are executable
        run: |
          if [ -d "./.github/scripts" ]; then chmod +x ./.github/scripts/*.sh; fi

      - name: Extract version
        id: version
        run: |
          VERSION=$(awk -F'=' '/^version=/ {print $2}' gradle.properties | tr -d "[:space:]")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Validate Sonatype Credentials
        run: |
          RESPONSE=$(curl -I -s -o /dev/null -w "%{http_code}" \
            -u "${{ secrets.OSSRH_USERNAME }}:${{ secrets.OSSRH_PASSWORD }}" \
            "https://oss.sonatype.org/service/local/staging/profile_repositories")
          
          if [[ "$RESPONSE" -ne 200 ]]; then
            echo "❌ Authentication to Sonatype OSSRH failed (HTTP $RESPONSE)"
            exit 1
          else
            echo "✅ Authentication to Sonatype OSSRH succeeded"
          fi

      - name: Check version
        run: ./.github/scripts/check_version.sh ${{ steps.version.outputs.version }}

      - name: Build and Test
        if: "!contains(github.event.head_commit.message, 'Release ')"
        run: ./gradlew build test --no-daemon

  publish:
    needs: validate
    if: |
      github.event_name == 'push' &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-'))
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Prepare META-INF and Manifest
        run: |
          mkdir -p build/resources/main/META-INF
          cp LICENSE build/resources/main/META-INF/
          cp NOTICE.md build/resources/main/META-INF/
          
          cat > build/resources/main/META-INF/MANIFEST.MF << EOF
          Implementation-Title: ${{ github.event.repository.name }}
          Implementation-Version: ${{ steps.release-info.outputs.version }}
          EOF

      - name: Configure JavaDoc options
        run: |
          awk '/mavenPublishing/{ print "tasks {\n    withType<Javadoc> {\n        (options as StandardJavadocDocletOptions).apply {\n            windowTitle = project.property(\"title\").toString() + \" - \" + project.version\n            header = \"\"\"<div style=\"margin-top: 7px\">\n                <a target=\"_parent\" href=\"https://keyple.org/\">\n                    <img src=\"https://keyple.org/docs/api-reference/java-api/keyple-java-core/1.0.0/images/keyple.png\" \n                        height=\"20px\" style=\"background-color: white; padding: 3px; margin: 0 10px -7px 3px;\"/>\n                </a>\n                ${project.property(\"title\")} - ${project.version}\n            </div>\"\"\"\n            docTitle = \"${project.property(\"title\")} - ${project.version}\"\n            setUse(true)\n            bottom = \"Copyright © Eclipse Foundation, Inc. All Rights Reserved.\"\n            overview = \"src/main/javadoc/overview.html\"\n        }\n    }\n}\n\n"; }1' build.gradle.kts > tmp && mv tmp build.gradle.kts

      - name: Setup POM configuration
        run: |
          cat > PUBLISHERS.yml << EOF
          name: "${{ github.event.repository.name }}"
          description: "$(cat gradle.properties | grep description | cut -d'=' -f2)"
          url: "https://github.com/eclipse-keyple/${{ github.event.repository.name }}"
          scm:
            connection: "scm:git:git://github.com/eclipse-keyple/${{ github.event.repository.name }}.git"
            developerConnection: "scm:git:https://github.com/eclipse-keyple/${{ github.event.repository.name }}.git"
            url: "https://github.com/eclipse-keyple/${{ github.event.repository.name }}"
          EOF

      - name: Extract version and check release type
        id: release-info
        run: |
          VERSION=$(awk -F'=' '/^version[[:space:]]*=/ {gsub(/[[:space:]]*/, "", $2); print $2}' gradle.properties)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
          echo "${{ github.event.head_commit.message }}" | grep -qE "^Release ${VERSION}$" && echo "type=release" >> $GITHUB_OUTPUT || echo "type=snapshot" >> $GITHUB_OUTPUT

      - name: Publish Release
        if: steps.release-info.outputs.type == 'release'
        run: ./gradlew build test publishAllPublicationsToMavenCentral --no-daemon --no-parallel
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_SUBKEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSPHRASE }}

      - name: Publish Snapshot
        if: steps.release-info.outputs.type == 'snapshot'
        run: ./gradlew build test publishAllPublicationsToMavenCentral --no-daemon --no-parallel
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_SUBKEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSPHRASE }}

      - name: Update JavaDoc
        if: steps.release-info.outputs.type != ''
        run: |
          ./.github/scripts/prepare_javadoc.sh ${{ github.event.repository.name }} ${{ steps.release-info.outputs.version }} ${{ steps.release-info.outputs.type == 'snapshot' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build*/libs/**
            build*/reports/tests/**
            build*/reports/jacoco/test/html/**